{
  "env": { "browser": true, "node": true, "es2024": true },
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": { "ecmaVersion": "latest", "sourceType": "module", "project": "./tsconfig.json" },
  "plugins": ["@typescript-eslint", "unicorn"],
  "rules": {
    "indent": ["error", 2],
    "linebreak-style": "off",
    "quotes": ["error", "double"],
    "@typescript-eslint/no-explicit-any": "off",
    "no-async-promise-executor": "off",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_", "caughtErrorsIgnorePattern": "^_" }],
    "@typescript-eslint/no-this-alias": "off",
    "@typescript-eslint/no-array-constructor": "off",
    "no-useless-constructor": "error",
    "@typescript-eslint/naming-convention": ["error", { "selector": "variable", "format": ["camelCase", "UPPER_CASE"] }],
    "no-nested-ternary": "error",
    "max-statements-per-line": ["error", { "max": 1 }],
    "no-unneeded-ternary": "error",
    "one-var-declaration-per-line": ["error", "always"],
    "no-else-return": "error",
    "block-spacing": ["error", "always"],
    "@typescript-eslint/no-inferrable-types": "error",
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/array-type": ["error", { "default": "array" }],
    "comma-spacing": "error",
    "@typescript-eslint/consistent-indexed-object-style": ["error", "index-signature"],
    "key-spacing": ["error", { "mode": "strict" }],
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "no-extra-semi": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "object-curly-spacing": ["error", "always"],
    "@typescript-eslint/prefer-find": "error",
    "@typescript-eslint/sort-type-constituents": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", { "anonymous": "never", "named": "never", "asyncArrow": "always" }],
    "@typescript-eslint/type-annotation-spacing": "error",
    "no-lonely-if": "error",
    "no-negated-condition": "error",
    "prefer-object-spread": "error",
    "unicorn/no-null": "error",
    "unicorn/no-useless-spread": "error",
    "unicorn/no-useless-length-check": "error",
    "unicorn/prefer-negative-index": "error",
    "unicorn/prefer-spread": "error",
    "unicorn/prefer-string-replace-all": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      { "accessibility": "no-public", "overrides": { "parameterProperties": "explicit" } }
    ],
    "no-restricted-imports": [
      "error",
      { "patterns": [{ "group": ["../*", "..", ".", "!@/*"], "message": "Relative parent imports are not allowed, use '@/*' alias instead" }] }
    ],
    "no-restricted-syntax": [
      "error",
      { "selector": "TSEnumDeclaration", "message": "Enums are not allowed, consider using union literal string types instead" },
      { "selector": "SwitchStatement", "message": "Switch statements are not allowed, consider using 'if + return' or 'if + else if' instead" },
      { "selector": "PropertyDefinition[static=true]", "message": "Static properties are not allowed, everywhere except the Main class" },
      { "selector": "MethodDefinition[static=true]", "message": "Static methods are not allowed, everywhere except the Main class" },
      { "selector": "FunctionExpression[returnType.type='TSTypeAnnotation']", "message": "Function return type trivially inferred from a definition, remove type annotation" },
      { "selector": "ArrowFunctionExpression[returnType.type='TSTypeAnnotation']", "message": "Function return type trivially inferred from a definition, remove type annotation" },
      { "selector": "MethodDefinition[kind='set']", "message": "Property setters are not allowed" },
      { "selector": "MethodDefinition[kind='get']", "message": "Property getters are not allowed" }
    ]
  },
  "ignorePatterns": ["src/experiments"],
  "overrides": [
    { "files": ["src/experiments/*", "scripts/*"], "rules": { "no-restricted-imports": "off" } },
    { "files": ["src/main.ts"], "rules": { "@typescript-eslint/no-extraneous-class": "off" } },
    { "files": ["src/main.ts"], "rules": { "no-restricted-syntax": ["off", { "selector": "PropertyDefinition[static=true]" }, { "selector": "MethodDefinition[static=true]" }] } }
  ]
}
